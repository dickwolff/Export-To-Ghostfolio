name: docker
run-name: Build Docker Container

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "GitVersion.yml"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - package.json
      - .github/*
  workflow_dispatch: # Also allow manual triggering

jobs:
  docker:
    env:
      dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

    name: Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"

      - name: Run GitVersion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ env.dockerhub_username != '' && env.dockerhub_token != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_token }}

      - name: Determine (new) image version
        run: |
          if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            echo "IMAGE_VERSION=${{ env.GitVersion_SemVer }}" >> $GITHUB_ENV
          else
            echo "IMAGE_VERSION=${{ env.GitVersion_MajorMinorPatch }}" >> $GITHUB_ENV
          fi

      - name: Automatically increase GitVersion
        if: github.event_name == 'pull_request'
        shell: bash 
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # Check if GitVersion.yml was already updated in the diff with the target branch.
          ALREADY_UPDATED=$(git diff ${{ github.event.pull_request.base.ref }} GitVersion.yml | grep "+next-version: $IMAGE_VERSION");
          echo "ALREADY_UPDATED: $ALREADY_UPDATED";
          # if [ -z "$ALREADY_UPDATED" ]
          # then
          #   REMOTE_REF="${{ github.event.pull_request.head.ref }}";
          #   LOCAL_BRANCH="${REMOTE_REF/refs\/heads\//}"; # This part is usually not necessary in GitHub Actions with head.ref
          #   echo "Checkout Local Branch: $LOCAL_BRANCH";
          #   # In GitHub Actions, the checkout action usually puts you on the correct branch.
          #   # Explicit checkout might not be needed unless you've switched branches previously.
          #   # git checkout $LOCAL_BRANCH;

          #   # Update GitVersion.yml using sed.
          #   sed -i "s/\(next-version:.*[0-9]\)/next-version: $IMAGE_VERSION/g" GitVersion.yml;

          #   # Add and commit the changes.
          #   git add "GitVersion.yml";
          #   git commit -m "Automatically incremented GitVersion.yml version to $IMAGE_VERSION";

          #   # Push the changes back to the source branch.
          #   # You need to push to the origin with a token that has write access to the repository.
          #   # The GITHUB_TOKEN provided by GitHub Actions usually has this permission for the source branch of a PR.
          #   git push origin $LOCAL_BRANCH;
          # else
          #   echo "GitVersion was already updated to $IMAGE_VERSION"
          # fi

      - name: Update versions in package files
        run: |
          sed -i "s/\"version\": \"__VERSION__\"/\"version\": \"${{ env.IMAGE_VERSION }}\"/" package.json

      - name: Build and push (PR)
        uses: docker/build-push-action@v5
        if: ${{ github.event_name == 'pull_request' && env.dockerhub_username != '' && env.dockerhub_token != '' }}
        with:
          push: true
          tags: |
            dickwolff/export-to-ghostfolio:${{ env.IMAGE_VERSION }}
          build-args: |
           IMAGE_VERSION=${{ env.IMAGE_VERSION }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push (main)
        uses: docker/build-push-action@v5
        if: ${{ github.event_name != 'pull_request' && env.dockerhub_username != '' && env.dockerhub_token != '' }}
        with:
          push: true
          tags: |
            dickwolff/export-to-ghostfolio:latest
            dickwolff/export-to-ghostfolio:${{ env.IMAGE_VERSION }}
          build-args: |
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
          platforms: linux/amd64,linux/arm64
